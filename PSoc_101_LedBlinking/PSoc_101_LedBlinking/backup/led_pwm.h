//*****************************************************************************
//*****************************************************************************
//  FILENAME: LED_PWM.h
//   Version: 2.5, Updated on 2009/10/15 at 17:11:37
//  Generated by PSoC Designer 5.0.1127.0
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 LED_PWM_EnableInt
#pragma fastcall16 LED_PWM_DisableInt
#pragma fastcall16 LED_PWM_Start
#pragma fastcall16 LED_PWM_Stop
#pragma fastcall16 LED_PWM_bReadCounter              // Read  DR0
#pragma fastcall16 LED_PWM_WritePeriod               // Write DR1
#pragma fastcall16 LED_PWM_bReadPulseWidth           // Read  DR2
#pragma fastcall16 LED_PWM_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bLED_PWM_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bLED_PWM_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the LED_PWM API.
//-------------------------------------------------

extern void LED_PWM_EnableInt(void);                        // Proxy Class 1
extern void LED_PWM_DisableInt(void);                       // Proxy Class 1
extern void LED_PWM_Start(void);                            // Proxy Class 1
extern void LED_PWM_Stop(void);                             // Proxy Class 1
extern BYTE LED_PWM_bReadCounter(void);                     // Proxy Class 2
extern void LED_PWM_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE LED_PWM_bReadPulseWidth(void);                  // Proxy Class 1
extern void LED_PWM_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bLED_PWM_ReadCounter(void);            // Deprecated
extern BYTE bLED_PWM_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for LED_PWM API's.
//--------------------------------------------------

#define LED_PWM_CONTROL_REG_START_BIT          ( 0x01 )
#define LED_PWM_INT_REG_ADDR                   ( 0x0e1 )
#define LED_PWM_INT_MASK                       ( 0x01 )


//--------------------------------------------------
// Constants for LED_PWM user defined values
//--------------------------------------------------

#define LED_PWM_PERIOD                         ( 0xfe )
#define LED_PWM_PULSE_WIDTH                    ( 0x7f )


//-------------------------------------------------
// Register Addresses for LED_PWM
//-------------------------------------------------

#pragma ioport  LED_PWM_COUNTER_REG:    0x020              //DR0 Count register
BYTE            LED_PWM_COUNTER_REG;
#pragma ioport  LED_PWM_PERIOD_REG: 0x021                  //DR1 Period register
BYTE            LED_PWM_PERIOD_REG;
#pragma ioport  LED_PWM_COMPARE_REG:    0x022              //DR2 Compare register
BYTE            LED_PWM_COMPARE_REG;
#pragma ioport  LED_PWM_CONTROL_REG:    0x023              //Control register
BYTE            LED_PWM_CONTROL_REG;
#pragma ioport  LED_PWM_FUNC_REG:   0x120                  //Function register
BYTE            LED_PWM_FUNC_REG;
#pragma ioport  LED_PWM_INPUT_REG:  0x121                  //Input register
BYTE            LED_PWM_INPUT_REG;
#pragma ioport  LED_PWM_OUTPUT_REG: 0x122                  //Output register
BYTE            LED_PWM_OUTPUT_REG;
#pragma ioport  LED_PWM_INT_REG:       0x0e1               //Interrupt Mask Register
BYTE            LED_PWM_INT_REG;


//-------------------------------------------------
// LED_PWM Macro 'Functions'
//-------------------------------------------------

#define LED_PWM_Start_M \
   LED_PWM_CONTROL_REG |=  LED_PWM_CONTROL_REG_START_BIT

#define LED_PWM_Stop_M  \
   LED_PWM_CONTROL_REG &= ~LED_PWM_CONTROL_REG_START_BIT

#define LED_PWM_EnableInt_M   \
   M8C_EnableIntMask(LED_PWM_INT_REG, LED_PWM_INT_MASK)

#define LED_PWM_DisableInt_M  \
   M8C_DisableIntMask(LED_PWM_INT_REG, LED_PWM_INT_MASK)


// end of file LED_PWM.h
